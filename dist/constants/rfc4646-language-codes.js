"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Rfc4646LanguageCodes = {
    AF_ZA: "af-ZA",
    SQ_AL: "sq-AL",
    AR_DZ: "ar-DZ",
    AR_BH: "ar-BH",
    AR_EG: "ar-EG",
    AR_IQ: "ar-IQ",
    AR_JO: "ar-JO",
    AR_KW: "ar-KW",
    AR_LB: "ar-LB",
    AR_LY: "ar-LY",
    AR_MA: "ar-MA",
    AR_OM: "ar-OM",
    AR_QA: "ar-QA",
    AR_SA: "ar-SA",
    AR_SY: "ar-SY",
    AR_TN: "ar-TN",
    AR_AE: "ar-AE",
    AR_YE: "ar-YE",
    HY_AM: "hy-AM",
    CY_AZ_AZ: "Cy-az-AZ",
    LT_AZ_AZ: "Lt-az-AZ",
    EU_ES: "eu-ES",
    BE_BY: "be-BY",
    BG_BG: "bg-BG",
    CA_ES: "ca-ES",
    ZH_CN: "zh-CN",
    ZH_HK: "zh-HK",
    ZH_MO: "zh-MO",
    ZH_SG: "zh-SG",
    ZH_TW: "zh-TW",
    ZH_CHS: "zh-CHS",
    ZH_CHT: "zh-CHT",
    HR_HR: "hr-HR",
    CS_CZ: "cs-CZ",
    DA_DK: "da-DK",
    DIV_MV: "div-MV",
    NL_BE: "nl-BE",
    NL_NL: "nl-NL",
    EN_AU: "en-AU",
    EN_BZ: "en-BZ",
    EN_CA: "en-CA",
    EN_CB: "en-CB",
    EN_IE: "en-IE",
    EN_JM: "en-JM",
    EN_NZ: "en-NZ",
    EN_PH: "en-PH",
    EN_ZA: "en-ZA",
    EN_TT: "en-TT",
    EN_GB: "en-GB",
    EN_US: "en-US",
    EN_ZW: "en-ZW",
    ET_EE: "et-EE",
    FO_FO: "fo-FO",
    FA_IR: "fa-IR",
    FI_FI: "fi-FI",
    FR_BE: "fr-BE",
    FR_CA: "fr-CA",
    FR_FR: "fr-FR",
    FR_LU: "fr-LU",
    FR_MC: "fr-MC",
    FR_CH: "fr-CH",
    GL_ES: "gl-ES",
    KA_GE: "ka-GE",
    DE_AT: "de-AT",
    DE_DE: "de-DE",
    DE_LI: "de-LI",
    DE_LU: "de-LU",
    DE_CH: "de-CH",
    EL_GR: "el-GR",
    GU_IN: "gu-IN",
    HE_IL: "he-IL",
    HI_IN: "hi-IN",
    HU_HU: "hu-HU",
    IS_IS: "is-IS",
    ID_ID: "id-ID",
    IT_IT: "it-IT",
    IT_CH: "it-CH",
    JA_JP: "ja-JP",
    KN_IN: "kn-IN",
    KK_KZ: "kk-KZ",
    KOK_IN: "kok-IN",
    KO_KR: "ko-KR",
    KY_KZ: "ky-KZ",
    LV_LV: "lv-LV",
    LT_LT: "lt-LT",
    MK_MK: "mk-MK",
    MS_BN: "ms-BN",
    MS_MY: "ms-MY",
    MR_IN: "mr-IN",
    MN_MN: "mn-MN",
    NB_NO: "nb-NO",
    NN_NO: "nn-NO",
    PL_PL: "pl-PL",
    PT_BR: "pt-BR",
    PT_PT: "pt-PT",
    PA_IN: "pa-IN",
    RO_RO: "ro-RO",
    RU_RU: "ru-RU",
    SA_IN: "sa-IN",
    CY_SR_SP: "Cy-sr-SP",
    LT_SR_SP: "Lt-sr-SP",
    SK_SK: "sk-SK",
    SL_SI: "sl-SI",
    ES_AR: "es-AR",
    ES_BO: "es-BO",
    ES_CL: "es-CL",
    ES_CO: "es-CO",
    ES_CR: "es-CR",
    ES_DO: "es-DO",
    ES_EC: "es-EC",
    ES_SV: "es-SV",
    ES_GT: "es-GT",
    ES_HN: "es-HN",
    ES_MX: "es-MX",
    ES_NI: "es-NI",
    ES_PA: "es-PA",
    ES_PY: "es-PY",
    ES_PE: "es-PE",
    ES_PR: "es-PR",
    ES_ES: "es-ES",
    ES_UY: "es-UY",
    ES_VE: "es-VE",
    SW_KE: "sw-KE",
    SV_FI: "sv-FI",
    SV_SE: "sv-SE",
    SYR_SY: "syr-SY",
    TA_IN: "ta-IN",
    TT_RU: "tt-RU",
    TE_IN: "te-IN",
    TH_TH: "th-TH",
    TR_TR: "tr-TR",
    UK_UA: "uk-UA",
    UR_PK: "ur-PK",
    CY_UZ_UZ: "Cy-uz-UZ",
    LT_UZ_UZ: "Lt-uz-UZ",
    VI_VN: "vi-VN",
};
exports.Rfc4646LanguageCodes = Rfc4646LanguageCodes;
//# sourceMappingURL=data:application/json;base64,